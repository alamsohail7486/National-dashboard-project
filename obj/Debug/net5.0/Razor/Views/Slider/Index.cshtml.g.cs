#pragma checksum "C:\Users\md sohail alam\Downloads\Telegram Desktop\DashboardProject\DashboardProject\DashboardProject\Views\Slider\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f23fabc035480a7b6c8da3dba27159c4c1aba816"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Slider_Index), @"mvc.1.0.view", @"/Views/Slider/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\md sohail alam\Downloads\Telegram Desktop\DashboardProject\DashboardProject\DashboardProject\Views\_ViewImports.cshtml"
using DashboardProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\md sohail alam\Downloads\Telegram Desktop\DashboardProject\DashboardProject\DashboardProject\Views\_ViewImports.cshtml"
using DashboardProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f23fabc035480a7b6c8da3dba27159c4c1aba816", @"/Views/Slider/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a36b6357daac120b4f164a364cd8f57a5fff2c46", @"/Views/_ViewImports.cshtml")]
    public class Views_Slider_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Dashboard/plugins/jquery/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("file-upload-image"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Images/"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("your image"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Slider", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "New", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f23fabc035480a7b6c8da3dba27159c4c1aba8166185", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


<!-- Button trigger modal -->
<button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#exampleModalLong"">
    Launch demo modal
</button>

<div class=""modal fade"" id=""Showdata"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLongTitle"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"" style=""max-width: 800px;"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""modele"">Modal title</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f23fabc035480a7b6c8da3dba27159c4c1aba8168000", async() => {
                WriteLiteral(@"
                <div class=""content-wrapper"" style=""min-height: 189.167px;"">
                    <!-- Content Header (Page header) -->
                    <div class=""content-header"">
                        <div class=""container-fluid"">
                            <div class=""row mb-2"">
                                <div class=""col-sm-6"">
                                    <h1 class=""m-0"">Slider</h1>
                                </div><!-- /.col -->
                                <div class=""col-sm-6"">
                                    <ol class=""breadcrumb float-sm-right"">
                                        <li class=""breadcrumb-item""><a href=""#"">Add New</a></li>
                                    </ol>
                                </div><!-- /.col -->
                            </div><!-- /.row -->
                        </div><!-- /.container-fluid -->
                    </div>
                    <!-- /.content-header -->
                    <!-- Main content -->
");
                WriteLiteral(@"                    <section class=""content"">
                        <div class=""container-fluid"">
                            <div class=""row"">
                                <div class=""col-md-8"">
                                    <div class=""card mb-4"">
                                        <div class=""card-header pb-0"">
                                            <input type=""hidden"" class=""form-control"" name=""id"" id=""Id"" />
                                            <div class=""form-group"">
                                                <h6>Title</h6>
                                                <input type=""text"" id=""title"" class=""form-control"" autocomplete=""off"" placeholder=""Enter title""  name=""Title"">
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-4"">
                                    <div c");
                WriteLiteral(@"lass=""card mb-4"">
                                        <div class=""card-header pb-0"">

                                            <div class=""form-group"">
                                                <h6>Featured Image</h6>
                                                <div class=""file-upload"">


                                                    <div class=""image-upload-wrap"">
                                                        <input class=""form-control"" multiple type=""file"" name=""ProfileImage"" id=""Image"" required />
                                                        <div class=""drag-text"">
                                                            <h3>Click to Upload Image</h3>
                                                        </div>
                                                    </div>
                                                    <div class=""file-upload-content"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "f23fabc035480a7b6c8da3dba27159c4c1aba81611444", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                        <div class=""image-title-wrap"">
                                                            <button type=""button"" onclick=""removeUpload()"" class=""remove-image"">
                                                                Remove <span class=""image-title"">Uploaded Image</span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>



                                    </div>

                                    <div class=""card"">
                                        <div class=""form-group"">
                                            <h6 class=""Publish"">Active</h6>
                                        </div>
                                ");
                WriteLiteral(@"        <div class=""padd10"">
                                            <div class=""padd10"">
                                                <input type=""radio"" id=""publish1"" class=""isActive"" name=""isActive"" value=""True"" checked /> True
                                                <input type=""radio"" id=""publish"" class=""isActive"" name=""isActive"" value=""False"" /> False
                                                <div class=""padd10"">
                                                    <div class=""padd10"">
");
                WriteLiteral("\r\n                                                        <button id=\"resetSlider\" type=\"button\" class=\"btn btn-danger\" onclick=\"Reset()\">Reset</button>\r\n");
                WriteLiteral(@"                                                        <input type=""submit"" class=""btn btn-danger"" value=""Submit"" />
                                                        <button id=""updSlider"" type=""button"" class=""btn btn-info float-right"" onclick=""updateSlider()""> update Slider</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </section>
                    <!-- /.content -->
                </div>
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-primary"">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class=""content-wrapper"" style=""min-height: 189.167px;"">
    <!-- Content Header (Page header) -->
    <div class=""content-header"">
        <div class=""container-fluid"">
            <div class=""row mb-2"">
                <div class=""col-sm-6"">
                    <h1 class=""m-0"">Slider</h1>
                </div><!-- /.col -->
                <div class=""col-sm-6"">
                    <ol class=""breadcrumb float-sm-right"">
                        <li class=""breadcrumb-item""><a href=""#"">All slider</a></li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
 ");
            WriteLiteral(@"   <section class=""content"">
        <div class=""container-fluid"">
            <div class=""Allpost"">
                <div class=""flexcreate"">
                    <div>
                        <a href=""/Slider/AddNewSlider"" class=""btn btn-primary"">Create</a>
                    </div>
                    <div>
                        <input type=""text"" name=""title"" id=""search12"" class=""form-control"" placeholder=""Search"">
                    </div>
                </div>
                <div class=""postable TBL"">
                    <table class=""table table-striped table-bordered"">
                        <thead>
                            <tr>
                              
                                <th>ID</th>
                                <th>Title</th>
                                <th>Image</th>
                                <th>Active</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                ");
            WriteLiteral(@"        <tbody class=""slider"">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>

<script>

    $(document).ready(function () {
        debugger;
          SlideList();
        $('#instSlider').show();
        $('#updSlider').hide();
    });


    function insertSlider() {
        //here we are checking it's validation.//
        if ($(""#title"").val() == """") {
            alertify.error(""Title is required"")
        }
        else if ($(""#images"").val() == """") {
            alertify.error(""Image is required"")
        }
        else if ($(""#isActive"").val() == """") {
            toastr.error(""IsActive is required"")
        }
        else {
            var slideobj = {
                Title: $(""#title"").val(),
                Image: $(""#images"").val(),
                isActive: $('input[name=""isActive""]:checked').val(),
            }
            $.ajax({
         ");
            WriteLiteral(@"       url: ""/Slider/insertSlider"",
                type: ""POST"",
                data: slideobj,
                success: function (result) {
                    toastr.success(""The data is inserted successfully"");
                    SlideList();
                    $('#Showdata').modal('hide');
                    Reset();
                },
                error: function (result) {
                    toastr.error(""Error is occurs"");
                }

            });
        }
    }

    function SlideList() {
        // alert('hello');
        $.ajax({
            url: ""/Slider/GetSliderList"",
            type: ""GET"",
            dataType: ""Json"",
            success: function (result) {
                // console.log('Alam bhai ko result', result);

                var html = '';
                $.each(result, function (key, item) {
                    // console.log('alam ka jalwa', item);
                    html += '<tr>';
                    html += '<td>' + item.id +");
            WriteLiteral(@" '</td>';
                    html += '<td>' + item.title + '</td>';
                    html += ' <td>' + item.isActive + '</td>';
                    html += ' <td><img src=""../Images/' + item.image + '"" height=""50"" width=""50""/></td>';
                    html += ' <td style= ""Display:flex; ""><button type=""button"" id=""deleteSlide"" class=""btn btn-primary"" style=""margin-right:5%;"" data-id=' + item.id + ' data-img=' + item.image + '><i class=""far fa-trash-alt""></i></button>';
                    html += '| <button type=""button"" class=""btn btn-primary"" onclick=""Edit(' + item.id + ')""><i class=""fas fa-pencil-alt""></i></button></td>';

                    html += '</tr>';
                });
                $("".slider"").html(html);
            }
        });
    }

    $('.slider').on('click', ""#deleteSlide"", function () {

        var id = $(this).attr(""data-id"");
        var image = $(this).attr(""data-img"");
        deleteSlider(id, image);

    });

    function Edit(Id) {
        // cons");
            WriteLiteral(@"ole.log(""function called"");

        $('#updSlider').show();
        $('#instSlider').hide();
        $('#Showdata').modal('show');

        $.ajax({
            url: ""/Slider/GetSliderById?Id="" + Id,
            type: ""GET"",
            dataType: ""Json"",
            success: function (result) {

                $(""#Id"").val(result.id),
                $(""#title"").val(result.title),
                $(""#Imagedit"").html('<img src=""../Images/' + result.image + '"" height=""50"" width=""50"" />');
                if (result.isActive) {
                    $('#publish1').prop('checked', true);
                }
                else {
                    $('#publish').prop('checked', true);
                }
                SlideList();
            },
            error: function (result) {
                toastr.error(""Error is occurs"");
            },

        });
    }

    function UpdatePage() {
        $('#updSlider').hide();
        $('#instSlider').show();
        toastr.success(""");
            WriteLiteral(@"The data is successfully updated"");

        //var updobj = {
        //    Id: $(""#Id"").val(),
        //    Title: $(""#title"").val(), 
        //    Image: $(""#images"").val(),
        //    isActive: $('input[name=""isActive""]:checked').val(),
        //};
        //$.ajax({
        //    url: ""/Slider/updateSlider"",
        //    type: ""POST"",
        //    data: updobj,
        //    success: function (result) {
        //        toastr.success(""The data is Updated successfully"");
        //        SlideList();
        //        Reset();
        //        $('#instSlider').show();
        //        $('#updSlider').hide();
        //        $('#Showdata').modal('hide');
        //    },
        //    error: function (result) {
        //        toastr.error(""The error is occuring on updating time"");
        //    }
        //});
    }

    function DeleteSlider(Id, image) {
        toastr.confirm('Confirm Title', 'Confirm Message',
            function () {
                $.ajax");
            WriteLiteral(@"({
                    url: ""/Slider/deleteSlider"",
                    data: { id: Id, imgdel: image },
                    type: ""POST"",
                    success: function (result) {
                        toastr.success(""You have click ok"");
                        SlideList();
                    },
                });
            },
             function () {
                toastr.error('Cancel')
            })
    }

    function Reset() {
        $(""#title"").val('');
        $(""#images"").val('');
        $(""#Imagedit"").html('');
    }

    $(document).ready(function () {

        $('.hide input[type=""radio""]').click(function () {
            var value = $(this).val();
            $.ajax({
                url: ""/Slider/insertSlider"",
                type: 'post',
                data: { ajax: 1, value: value },
                success: function (response) {
                    $('#response').text(value);
                }
            });
        });
    });

    ");
            WriteLiteral(@"$(document).ready(function () {
        $("".custom-file-input"").on(""change"", function () {
            //console.log($(this));
            //var filename = $(this).val().split(""\\"").pop();
            //$(this).next("".custom-file-label"").html(filename);

            var filelabel1 = $(this).next("".custom-file-input"");
            var files = $(this)[0].files;
            if (files.length > 1) {
                filelabel1.html(files.length + 'files selected');

            }
            else if (files.length == 1) {
                filelabel1.html(files[0].name);
            }
        })

    });

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
